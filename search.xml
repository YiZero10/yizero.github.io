<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>操作系统知识点汇总</title>
      <link href="/2021/07/18/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/"/>
      <url>/2021/07/18/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86%E7%82%B9%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h2 id="一、引论"><a href="#一、引论" class="headerlink" title="一、引论"></a>一、引论</h2><ol><li>定义：一种系统软件</li><li>地位：裸机之上的第一层软件，是建立其他所有软件的基础。它是整个系统的控制管理中心，既管硬件，又管软件，它为其他软件提供运行环境。</li><li>基本特征：并发、共享、异步、虚拟。（最基本特征：并发、共享）</li><li>主要功能：处理机管理、存储器管理、文件管理、设备管理</li><li>发展历程：手工操作阶段、批处理阶段、分时操作系统（有人机交互）、实时操作系统（能优先处理紧急任务）</li></ol><h3 id="一些预置概念"><a href="#一些预置概念" class="headerlink" title="一些预置概念"></a>一些预置概念</h3><ol><li><p>两种指令</p><ul><li>特权指令：不允许用户程序使用（只允许操作系统使用）。如IO指令、置中断指令</li><li>非特权指令：普通用户的运算指令</li></ul></li><li><p>两种程序</p><ul><li>内核程序：</li><li>应用程序：</li></ul></li><li><p>处理机状态</p><ul><li>用户态（目态）：CPU只能执行非特权指令</li><li>核心态（管态、内核态）：可以执行所有指令</li><li>用户态到核心态：通过中断（是硬件完成的）</li><li>核心态到用户态：特权指令psw的标注位：0用户态、1核心态</li></ul></li><li><p>原语</p></li><li><p>中断和异常</p><ul><li>内中断（异常，信号来自内部）<ul><li>自愿中断——指令中断</li><li>强迫中断——硬件中断、软件中断</li></ul></li><li>外中断（中断，信号来自外部）<ul><li>外设请求（如打印机缺纸……）</li><li>人工干预</li></ul></li></ul></li><li><p>系统调用</p><p>系统给程序员（应用程序）提供的唯一接口，可获得OS的服务。在用户态发生，核心态处理</p></li><li><p>体系结构</p><ul><li>大内核</li><li>微内核</li></ul></li></ol><h2 id="二、进程调度"><a href="#二、进程调度" class="headerlink" title="二、进程调度"></a>二、进程调度</h2><h3 id="2-1-进程管理"><a href="#2-1-进程管理" class="headerlink" title="2.1 进程管理"></a>2.1 进程管理</h3><ol><li><p>目的</p><p>为了更好地描述和控制程序并发执行，实现操作系统的并发性和共享性</p><p>（进程是动态的，程序是静态的）</p></li><li><p>定义</p><p>是计算机中的程序关于某数据集合上的一次运行活动，是系统进行资源分配和调度的基本单位</p></li><li><p>组成</p><ul><li>进程控制块PCB：保存进程运行期间相关的数据，是进程存在的<strong>唯一标志</strong></li><li>程序段：能被进程调度到CPU的代码</li><li>数据段</li></ul></li><li><p>进程的状态：</p><ul><li>运行态</li><li>就绪态：一切资源准备完善，等待处理机调度</li><li>阻塞态</li><li>创建状态</li><li>结束状态</li></ul></li><li><p>进程的状态转换</p><ul><li>运行态-&gt;就绪态：时间片用完等</li><li>运行态-&gt;阻塞态：等待资源或事件等</li></ul><p><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/07-18-22-07-18-22-07-18-22-watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMTAzNDk1,size_16,color_FFFFFF,t_70-20210718221929142.png" alt="C++–问题24–进程的上下文切换| 码农家园"></p></li><li><p>线程</p><ul><li>引入目的：为了更好的使用多道程序并发执行，提高资源利用率和系统吞吐量</li><li>特点：是程序执行的最小单位，基本不拥有任何系统资源（调度的基本单位）‘’资源分配的基本单位还是进程）</li><li>线程属于某一个进程，并与进程内的其他线程一起共享进程的资源</li></ul></li></ol><h3 id="2-2-处理机调度"><a href="#2-2-处理机调度" class="headerlink" title="2.2 处理机调度"></a>2.2 处理机调度</h3><ol><li><p>概念</p><p>是对处理机进行分配，即从就绪队列中按照算法选择一个进程并将处理机分配给它运行，以实现进程并发地执行。</p></li><li><p>分类</p><ul><li>高级调度（作业调度）次数少</li><li>中级调度（内存对换）次数中等，与挂起态有关</li><li>低级调度（进程调度）次数多</li></ul></li><li><p>调度方式</p><ul><li>剥夺式</li><li>非剥夺式</li></ul></li><li><p>调度准则</p><ul><li>CPU利用率</li><li>系统吞吐量</li><li>周转时间</li><li>等待时间</li><li>响应时间</li></ul></li><li><p><strong>进程调度算法</strong></p><ul><li><p>先来先服务FCFS：有利于长作业</p></li><li><p>最短作业优先算法SJF</p></li><li><p>最短剩余时间优先算法SRTF：把SJF改为抢占式</p></li><li><p>最高响应比优先算法HRN：长短作业兼顾</p><p>响应比计算$R=1+\frac{作业等待时间}{作业处理时间}$</p></li><li><p>时间片轮转算法：剥夺式调度</p></li><li><p>多级反馈队列调度算法：长短作业兼顾</p></li></ul></li></ol><h3 id="2-3-管程"><a href="#2-3-管程" class="headerlink" title="2.3 管程"></a>2.3 管程</h3><ol><li>组成<ul><li>名称：管理进程的程序</li><li>局部于管程内部的共享结构数据说明</li><li>对该数据结构进行操作的一组过程（或函数）</li><li>共享数据设置初值</li></ul></li><li>条件变量（进程阻塞的原因）操作<ul><li>wait（正在调用管程的进程用wait插入等待队列，释放管程）</li><li>signal（唤醒一个因x条件而阻塞的进程）</li></ul></li></ol><h3 id="2-4-进程同步"><a href="#2-4-进程同步" class="headerlink" title="2.4 进程同步"></a>2.4 进程同步</h3><ol><li><p>引入原因：协调进程之间的相互制约关系</p></li><li><p>制约关系</p><ul><li>同步：直接制约关系，访问者对资源有序访问</li><li>互斥：间接制约关系，多个进程之间共享临界资源存在的关系，一个进程进入临界区使用临界资源时，另一个进程必须等待。</li></ul></li><li><p>临界资源</p><p>一次仅允许一个进程使用的资源（例如：打印机，共享缓冲区，共享变量，公共队列……）</p></li><li><p>临界区</p><p>指进程中涉及访问临界资源的那个程序段</p></li><li><p>临界区互斥</p><ul><li>原则<ul><li>有空让进</li><li>无空等待</li><li>多中择一</li><li>有限等待</li><li>让权等待：如果进程不能进入自己的临界区，则应让出CPU，避免进程出现“忙等”现象。</li></ul></li><li>基本方法<ul><li>信号量-&gt;PV操作<ul><li>wait（占有资源）P操作</li><li>signal（释放资源）V操作</li></ul></li></ul></li></ul></li></ol><h3 id="2-5-死锁"><a href="#2-5-死锁" class="headerlink" title="2.5 死锁"></a>2.5 死锁</h3><ol><li>m个系统资源总数，n个进程数，k个每个进程最大需求量则：$m&gt;=n*(k-1)+1$</li><li>产生原因：非剥夺资源的竞争和进程的不恰当推进顺序（与饥饿不同）</li><li>定义：多个进程因竞争资源而造成的一种僵局，如果没有外力，这些进程将无法推进</li><li>四个必要条件：<ul><li>互斥使用（资源独占）</li><li>不可强占（不可剥夺）：该资源只能由本进程释放</li><li>请求和保持（部分分配，占有申请）：进程已经保持一个资源，但提出新的资源请求</li><li>循环等待</li></ul></li><li>解决方法：<ul><li>预防死锁<ul><li>破坏不可剥夺条件：在允许进程动态申请资源的前提下，一个进程在申请新的资源不能得到满足而变为等待状态之前，必须释放已占有的全部资源，若需要再重新申请</li><li>破坏请求和保持条件：要求每个进程在运行前一次性申请它所要求的所有资源，且仅当该进程所要资源均可满足时才给予一次性分配</li><li>破坏循环等待条件：采用资源有序分配法，把系统中所有资源编号，进程在申请操作资源时必须严格按照资源编号的递增次序进行，否则操作系统不给予分配</li></ul></li><li>避免死锁<ul><li>安全状态（寻找安全序列）</li><li>银行家算法（动态方法）</li></ul></li><li>检测死锁<ul><li>进程资源分配图+死锁定理</li></ul></li><li>解除死锁<ul><li>资源剥夺法</li><li>撤销进程法</li><li>进程回退法</li></ul></li></ul></li></ol><h2 id="三、内存管理"><a href="#三、内存管理" class="headerlink" title="三、内存管理"></a>三、内存管理</h2><h3 id="3-1-功能"><a href="#3-1-功能" class="headerlink" title="3.1 功能"></a>3.1 功能</h3><ol><li>内存空间的分配与回收</li><li>地址转换/地址重定位/地址映射：逻辑地址（相对地址、虚拟地址）转换为物理地址（绝对地址）</li><li>内存空间的扩充：虚拟内存的应用</li><li>存储保护：防止内存地址越界</li></ol><h3 id="3-2-装入模块放入内存方式"><a href="#3-2-装入模块放入内存方式" class="headerlink" title="3.2 装入模块放入内存方式"></a>3.2 装入模块放入内存方式</h3><ol><li>绝对装入：适合单道程序</li><li>可重定位装入：静态重定位，适合多道程序</li><li>动态运行时装入：动态重定位</li></ol><h3 id="3-3-内存保护方式"><a href="#3-3-内存保护方式" class="headerlink" title="3.3 内存保护方式"></a>3.3 内存保护方式</h3><ol><li>在CPU中设施一对上下寄存器</li><li>采用重定位寄存器+界地址寄存器</li></ol><h3 id="3-4-扩充内存"><a href="#3-4-扩充内存" class="headerlink" title="3.4 扩充内存"></a>3.4 扩充内存</h3><ol><li>多道程序环境下<ul><li>覆盖</li><li>交换：中级调度技术</li></ul></li><li>虚拟内存管理<ul><li>局部性原理<ul><li>空间局部性</li><li>时间局部性</li></ul></li><li>特征<ul><li>多次性</li><li>对换性</li><li>虚拟性</li></ul></li><li>管理内存方式<ul><li>请求分页管理方式<ul><li>新增功能<ul><li>请求调页功能</li><li>页面置换功能<ul><li>最佳置换算法</li><li>先进先出算法：出现Belady异常</li><li>最近最久未使用算法</li><li>时钟置换算法：淘汰最近未使用的</li><li>改进时钟算法：最先淘汰被修改且没有访问的</li></ul></li><li>页面分配策略<ul><li>固定分配局部置换：产生内部碎片</li><li>可变分配全局置换：产生外部碎片</li><li>可变分配局部置换</li></ul></li><li>调入页面时机<ul><li>预调页策略</li><li>请求调页策略</li></ul></li></ul></li><li>异常</li></ul></li><li>请求分段管理方式</li></ul></li><li>最大：不超过计算机的地址位数</li></ul></li></ol><h3 id="3-5-管理内存的方式"><a href="#3-5-管理内存的方式" class="headerlink" title="3.5 管理内存的方式"></a>3.5 管理内存的方式</h3><ol><li>连续分配方式<ul><li>单一连续分配</li><li>固定分区分配<ul><li>产生内部碎片、无外部碎片</li></ul></li><li>动态分区分配<ul><li>产生外部碎片</li><li><strong>分配算法</strong>：首次适应法、循环首次适应法、最佳适应法、最坏适应法、邻近适应法</li></ul></li></ul></li><li>离散分配方式<ul><li>分页存储管理方式<ul><li>单级分页<ul><li>类似固定分区技术，产生内部碎片</li><li>逻辑结构分页号+页内偏移量</li><li>引入快表，加速地址变换的速度</li></ul></li><li>二级分页</li></ul></li><li>分段存储管理方式<ul><li>分段管理的地址空间是二维的</li></ul></li><li>段页式存储管理方式</li></ul></li></ol><h2 id="四、文件管理"><a href="#四、文件管理" class="headerlink" title="四、文件管理"></a>四、文件管理</h2><h3 id="4-1-文件"><a href="#4-1-文件" class="headerlink" title="4.1 文件"></a>4.1 文件</h3><ol><li><p>文件的组成：文件体+文件说明</p></li><li><p>文件的逻辑结构：</p><ul><li>记录式文件</li><li>流文件</li></ul></li><li><p>文件的存取方法：</p><ul><li>顺序存取</li><li>直接存取</li><li>索引存取</li></ul></li><li><p>文件的物理结构</p><ul><li>连续文件</li><li>串联文件</li><li>索引文件</li></ul></li><li><p>文件的存储设备</p><ul><li>顺序存储设备</li><li>直接存储设备</li></ul></li></ol><h3 id="4-2-文件目录结构"><a href="#4-2-文件目录结构" class="headerlink" title="4.2 文件目录结构"></a>4.2 文件目录结构</h3><ol><li>数据结构：<ul><li>文件控制块<ul><li>文件名</li><li>物理地址</li></ul></li><li>索引节点</li></ul></li><li>操作：搜索、创建、删除、显示目录、修改目录</li><li>结构：<ul><li>单级目录结构</li><li>二级目录结构</li><li>树形目录结构</li><li>无环图目录结构</li></ul></li></ol><h3 id="4-3-文件共享"><a href="#4-3-文件共享" class="headerlink" title="4.3 文件共享"></a>4.3 文件共享</h3><ol><li>基于索引节点的共享方式（硬链接）：链接到多个目录中</li><li>基于符号链实现文献共享（软链接）：指存放路径link</li></ol><h3 id="4-4-文件保护"><a href="#4-4-文件保护" class="headerlink" title="4.4 文件保护"></a>4.4 文件保护</h3><ol><li>访问类型：读写执行添加</li><li>访问控制：控制用户身份</li><li>口令密码</li></ol><h3 id="4-5-文件系统层次结构"><a href="#4-5-文件系统层次结构" class="headerlink" title="4.5 文件系统层次结构"></a>4.5 文件系统层次结构</h3><ol><li>用户调用接口</li><li>文件目录系统</li><li>存取控制验证模块</li><li>逻辑文件系统与文件信息缓冲区</li><li>物理文件系统</li><li>设备管理程序模型</li></ol><h3 id="4-6-目录实现"><a href="#4-6-目录实现" class="headerlink" title="4.6 目录实现"></a>4.6 目录实现</h3><ol><li>线性列表</li><li>哈希表</li></ol><h3 id="4-7-文件分配方式"><a href="#4-7-文件分配方式" class="headerlink" title="4.7 文件分配方式"></a>4.7 文件分配方式</h3><ol><li>连续分配</li><li>链接分配</li><li>索引分配</li></ol><h3 id="4-8-文件存储空间管理"><a href="#4-8-文件存储空间管理" class="headerlink" title="4.8 文件存储空间管理"></a>4.8 文件存储空间管理</h3><ol><li>初始化：目录区、文件区</li><li>管理方法：<ul><li>空闲表法</li><li>空闲链表法</li><li>位示图法</li></ul></li></ol><h3 id="4-9-磁盘"><a href="#4-9-磁盘" class="headerlink" title="4.9 磁盘"></a>4.9 磁盘</h3><ol><li>磁盘地址：<strong>柱面号x盘面号x扇区号</strong></li><li>读写操作时间：寻找时间、延迟时间、传输时间</li><li><strong>磁盘调度算法</strong><ul><li>先来先服务FCFS</li><li>最短寻找时间优先SSTF：存在“饥饿”现象</li><li>扫描算法/电梯算法SCAN</li><li>循环扫描算法CSCAN</li></ul></li><li>磁盘管理<ul><li>磁盘初始化</li><li>引导块</li><li>坏块</li></ul></li><li>提高磁盘I/O速度的方法<ul><li>提前读</li><li>延迟写</li><li>虚拟盘（RAM盘）</li></ul></li></ol><p><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/07-18-22-07-18-21-image-20210718211455600-20210718221946316.png" alt="image-20210718211455600"></p><h2 id="五、IO外设管理"><a href="#五、IO外设管理" class="headerlink" title="五、IO外设管理"></a>五、IO外设管理</h2><h3 id="5-1-分类"><a href="#5-1-分类" class="headerlink" title="5.1 分类"></a>5.1 分类</h3><ol><li>块设备：如磁盘……</li><li>字符设备：如打印机……</li></ol><h3 id="5-2-I-O控制方式"><a href="#5-2-I-O控制方式" class="headerlink" title="5.2 I/O控制方式"></a>5.2 I/O控制方式</h3><ol><li>程序直接控制：没有中断机制，是忙查询；造成CPU资源浪费</li><li>中断驱动方式：字节；外设做好了再呼唤CPU；实现CPU和设备并行</li><li>DMA方式：数据块 ；不经过CPU；内存和设备之间建立了一条数据通路</li><li>通道控制方式：一种I/O专用处理器；效率比DMA高</li></ol><h3 id="5-3-I-O子系统层次结构"><a href="#5-3-I-O子系统层次结构" class="headerlink" title="5.3 I/O子系统层次结构"></a>5.3 I/O子系统层次结构</h3><ol><li>用户层IO软件</li><li>设备独立性软件</li><li>设备驱动程序</li><li>中断处理程序</li><li>硬件设备</li></ol><h3 id="5-4-I-O管理内容"><a href="#5-4-I-O管理内容" class="headerlink" title="5.4 I/O管理内容"></a>5.4 I/O管理内容</h3><ol><li>状态跟踪</li><li>设备存取</li><li>设备分配</li><li>设备控制</li></ol><h3 id="5-5-I-O核心子系统"><a href="#5-5-I-O核心子系统" class="headerlink" title="5.5 I/O核心子系统"></a>5.5 I/O核心子系统</h3><ol><li><p>服务</p><ul><li>IO调度</li><li>缓冲与高速缓存</li><li>设备分配与回收</li><li>假脱机</li><li>设备保护与差错处理</li></ul></li><li><p>高速缓存+缓冲区</p><ul><li>高速缓存</li><li>缓冲区：单缓冲、双缓冲、循环缓冲、缓冲池</li></ul></li><li><p>设备分配时数据结构</p><ul><li>设备控制表DCT</li><li>控制器控制表COCT</li><li>通道控制表CHCT</li><li>系统设备表SDT</li></ul></li><li><p>设备分配步骤</p><ul><li>分配设备 SDT找DCT</li><li>分配控制器        COCT</li><li>分配通道            CHCT</li></ul></li><li><p>设备分配算法</p><ul><li>先来先服务算法</li><li>优先级高者优先</li></ul></li><li><p>SPOOLing系统</p><ul><li><p>定义：SPOOLing系统既不同于脱机方式，也不同于直接藕合方式，SPOOLing技术实际上是一种外围设备同时联机操作技术，又称为排队转储技术。它在输入和输出之间增加了“输入井”和“输出井”的排队转储环节，以消除用户的“联机”等待时间。在系统输入模块收到作业输入请求信号后，输入管理模块中的读过程负责将信息从输入装置中读入输入井缓冲区。当缓冲区满时，由写过程将信息从缓冲区写到外存的输入井中，读过程和写过程反复循环，直到一个作业输入完毕。当读过程读到一个硬件结束标志之后，系统再次驱动写过程把最后一批信息写入外存输入井并调用中断处理程序结束该次输入。然后，系统为该作业建立作业控制块，从而使输入井中的作业进入作业等待队列，等待作业调度程序选中后进入内存运行。系统在管理输入井过程中可以“不断”读入输入的作业，直到输入结束或输入井满而暂停。</p></li><li><p>组成</p><ul><li>输入井和输出井：在磁盘中</li><li>输入缓冲区和输出缓冲区：在内存中</li><li>输入进程和输出进程</li></ul><p>从输入井读取信息，作业执行结果暂存输出井</p><p><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/07-18-22-07-18-22-zHeHYXn3OAFvwoGevOfJJAylo8llvS8W_YJX6LP3yp2PP_lJy-4vs-5qPdReqM-JHYAFf6TD4N_WtjpGCUAyljrgawg3UZ7idXWsSEgKI1VKO0yLI6-OI4AHwIY-20210718221946340.jpeg" alt="SPOOLing技术(假脱机技术)"></p></li><li><p>特点</p><ul><li>提高了IO速度</li><li>设备不被任何进程独占</li><li>实现了虚拟设备功能</li></ul></li></ul></li></ol><h2 id="六、大题涉及知识点"><a href="#六、大题涉及知识点" class="headerlink" title="六、大题涉及知识点"></a>六、大题涉及知识点</h2><ol><li><p>信号量、PV操作</p><ul><li>机票问题</li><li>生产者——消费者问题</li><li>读者和写者问题</li><li>理发师问题</li></ul></li><li><p>银行家算法</p></li><li><p>进程调度算法</p></li><li><p>页面置换算法</p><ul><li>最佳置换算法OPT：选择永不使用的或在最长时间内不再被访问的页面进行置换</li><li>先进先出置换算法FIFO：选择最炫进入内存的页面进行置换</li><li>最近最久未使用置换算法LRU：选择最近一段时间内最长时间没有被访问过的页面进行置换</li><li>时钟置换算法/最近未使用置换算法Clock/NRU：</li><li>最少使用置换算法LFU：把当前为止被访问次数最少的页面淘汰（设置访问计数器）</li></ul></li><li><p>逻辑地址转换物理地址</p><ul><li><p>先来先服务FCFS：有利于长作业</p></li><li><p>最短作业优先算法SJF</p></li><li><p>最短剩余时间优先算法SRTF：把SJF改为抢占式</p></li><li><p>最高响应比优先算法HRN：长短作业兼顾</p><p>响应比计算$R=1+\frac{作业等待时间}{作业处理时间}$</p></li><li><p>时间片轮转算法：剥夺式调度</p></li><li><p>多级反馈队列调度算法：长短作业兼顾</p></li></ul></li><li><p>磁盘驱动臂调度算法</p><ul><li><p>先来先服务FCFS</p></li><li><p>最短寻找时间优先SSTF：存在“饥饿”现象</p></li><li><p>扫描算法/电梯算法SCAN</p></li><li><p>循环扫描算法CSCAN</p></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于长沙</title>
      <link href="/2020/08/04/%E5%85%B3%E4%BA%8E%E9%95%BF%E6%B2%99/"/>
      <url>/2020/08/04/%E5%85%B3%E4%BA%8E%E9%95%BF%E6%B2%99/</url>
      
        <content type="html"><![CDATA[<p><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/08-04-23-IMG_2741.JPG" alt="IMG_2741"></p><h3 id="一、出行准备🎒"><a href="#一、出行准备🎒" class="headerlink" title="一、出行准备🎒"></a>一、出行准备🎒</h3><h4 id="1-1-行李备忘🧳"><a href="#1-1-行李备忘🧳" class="headerlink" title="1.1 行李备忘🧳"></a>1.1 行李备忘🧳</h4><ul><li><input checked disabled type="checkbox"> 洗漱用品</li><li><input checked disabled type="checkbox"> 防晒霜</li><li><input checked disabled type="checkbox"> 伞</li><li><input checked disabled type="checkbox"> 护肤品</li><li><input checked disabled type="checkbox"> 充电器</li><li><input checked disabled type="checkbox"> 充电宝</li><li><input checked disabled type="checkbox"> 洗牙器！！</li><li><input checked disabled type="checkbox"> 学生证！！！</li></ul><h4 id="1-2-关于交通"><a href="#1-2-关于交通" class="headerlink" title="1.2 关于交通"></a>1.2 关于交通</h4><ul><li>厦门-长沙 ✈️ 往返</li><li>长沙地铁、掌上公交APP</li><li>“湖南省居民健康卡”申请健康卡</li></ul><h4 id="1-3-关于吃喝"><a href="#1-3-关于吃喝" class="headerlink" title="1.3 关于吃喝"></a>1.3 关于吃喝</h4><ul><li>【奶茶 🥤】<ul><li>茶颜悦色（我要把所有的喝一遍，注册的时候把去的那天作为生日hhh<ul><li>（十米一家茶颜悦色 不要怕喝不到 但是基本上人都很多 外卖不多 都线下排队买</li><li>幽兰拿铁</li><li>蔓越阑珊</li><li>人间烟火</li></ul></li><li>MAMAcha<ul><li>莓莓茶果乐</li></ul></li></ul></li><li>【小龙虾 🦞】<ul><li>天宝兄弟</li><li>小浣熊</li></ul></li><li>【嗦粉】<ul><li>肆姐粉店（坡子街）</li><li>夏记粉店</li></ul></li><li>【湘菜】<ul><li>炊烟时代！！</li><li>壹盏灯</li><li>费大厨辣椒炒肉（没有炊烟时代好吃</li></ul></li><li>【小吃】<ul><li>黑色经典臭豆腐</li><li>邵福记梅菜扣肉饼</li><li>金记糖油坨坨</li><li>吴酥生宫廷酥饼</li></ul></li></ul><h4 id="1-4-关于住宿"><a href="#1-4-关于住宿" class="headerlink" title="1.4 关于住宿"></a>1.4 关于住宿</h4><ul><li>考虑因素<ul><li>近地铁站</li><li>近市中心</li></ul></li><li>最后定了 <strong>觅恋芳舍酒店（长沙五一广场地铁站店）</strong>的LOFT房 🏠</li><li>体验<ul><li>整体干净整洁</li><li>有窗户</li><li>厕所有些不太满意</li><li>其他都还可以</li><li>没有拍房间 但是基本跟携程上的照片差不多</li></ul></li></ul><h3 id="二、Day-1-8-8-周六"><a href="#二、Day-1-8-8-周六" class="headerlink" title="二、Day 1 8.8 周六"></a>二、Day 1 8.8 周六</h3><h4 id="2-1-抵达"><a href="#2-1-抵达" class="headerlink" title="2.1 抵达"></a>2.1 抵达</h4><ul><li><p>厦门 ✈️ 长沙 16:40落地</p></li><li><p>酒店交通</p><ul><li>机场二楼 磁悬浮列车 20 💰</li><li>地铁二号线——五一广场</li><li>⏰ 耗时1.5小时左右</li></ul></li><li><p>茶颜悦色初体验</p><ul><li>关注公众号</li><li>进去小程序注册一下会员</li><li>料想到两个人可能会喝很多 就提前冲了200¥ 然后送了30¥ 🤭</li><li>注册会员的时候 生日设置去的那几天 就可以白嫖一杯（薅羊毛 🤚</li></ul><figure class="half">  <img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-10-IMG_4851.PNG" alt="IMG_4851" style="zoom:30%;float:left">  <img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-09-IMG_4857_%E5%89%AF%E6%9C%AC.jpg" alt="IMG_4857_副本" style="zoom:13.2%;display:inline"></figure></li></ul><h4 id="2-2-坡子街"><a href="#2-2-坡子街" class="headerlink" title="2.2 坡子街"></a>2.2 坡子街</h4><ul><li><p>解决晚饭</p><ul><li>酒店在五一广场这，走路到坡子街什么的都特别近！</li><li>肆姐粉店（坡子街）</li></ul><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-09-IMG_4865.jpg" alt="IMG_4865" style="height:230px;display:inline-block; align:left"></li></ul><h4 id="2-3-文和友打卡"><a href="#2-3-文和友打卡" class="headerlink" title="2.3 文和友打卡"></a>2.3 文和友打卡</h4><ul><li>吃完嗦粉在街边吃了<strong>黑色经典臭豆腐</strong></li><li>时间还是很充裕，就直接步行到海信广场去看超级文和友了</li><li>网上很火的长沙标识的墙就在下楼后的出口</li></ul><figure class="third">  <img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-10-IMG_4870.JPG" alt="IMG_4870" style="height:230px;display:inline-block; margin:0px"><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-10-IMG_8569.jpg" alt="IMG_4870" style="height:230px;display:inline-block; margin:0px"><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-10-IMG_8556.jpg" alt="IMG_4870" style="height:230px;display:inline-block; margin: 0px"></figure><h4 id="2-4-吃夜宵"><a href="#2-4-吃夜宵" class="headerlink" title="2.4 吃夜宵"></a>2.4 吃夜宵</h4><ul><li><p>小浣熊-&gt;小龙虾！</p></li><li><p>一定一定要提前在小程序预约</p><figure class="half">  <img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-09-IMG_4894.jpg" alt="IMG_4894" style="zoom:10%;display:inline-block;">  <img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-10-IMG_4895_副本.jpg" alt="IMG_48595_副本" style="zoom:10%;display:inline-block;%"></figure></li></ul><h3 id="三、Day-2-8-9-周日"><a href="#三、Day-2-8-9-周日" class="headerlink" title="三、Day 2  8.9 周日"></a>三、Day 2  8.9 周日</h3><h4 id="3-1-IFS国金中心7楼打卡"><a href="#3-1-IFS国金中心7楼打卡" class="headerlink" title="3.1 IFS国金中心7楼打卡"></a>3.1 IFS国金中心7楼打卡</h4><ul><li>这个地方就很离谱。。。</li><li>如果是在旅游旺季去的话，劝退</li><li>去看两眼就好了 旅游旺季排队拍照简直窒息 🥵</li><li>大热天大早上起来排了2小时 拍照15分钟 📷</li></ul><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-10-IMG_8580.jpg" alt="IMG_4894" style="height:400"><h4 id="3-2-午饭打卡炊烟时代"><a href="#3-2-午饭打卡炊烟时代" class="headerlink" title="3.2 午饭打卡炊烟时代"></a>3.2 午饭打卡炊烟时代</h4><p>出ifs附近就有一家，每一家店都会有大喇叭 📣 一直在循环他们的广告 “传销美食”哈哈哈哈哈</p><p>取号会给一个小票 小票上的推荐菜品真的还不错 👍 两个人三道菜很刚好</p><figure class="third">  <img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-10-IMG_4956_副本.jpg" alt="IMG_4956_副本" style="height:230px;display:inline-block; margin:0px"><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-10-IMG_4964_副本.jpg" alt="IMG_4964_副本" style="height:230px;display:inline-block; margin:0px"><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-10-IMG_4961.jpg" alt="IMG_4961" style="height:230px;display:inline-block; margin: 0px"></figure><h4 id="3-3-谢子龙影像艺术馆"><a href="#3-3-谢子龙影像艺术馆" class="headerlink" title="3.3 谢子龙影像艺术馆"></a>3.3 谢子龙影像艺术馆</h4><ul><li>提前预约</li><li>一层免费 二层55¥</li><li>公交 🚌  26快线</li></ul><h4 id="3-4-李自健美术馆"><a href="#3-4-李自健美术馆" class="headerlink" title="3.4 李自健美术馆"></a>3.4 李自健美术馆</h4><ul><li>周一闭馆</li><li>提前预约 免费 🎫</li></ul><p><strong>关于美术馆该不该去？</strong></p><p>个人认为，如果来的天数比较多可以来看一下，虽然东西不多，和其他美术馆类似，但也是个好地方</p><p>不过夏天来真的太热了 😭  会窒息 照都不想拍的那种</p><p><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-10-IMG_8621.jpg" alt="IMG_8621"></p><h4 id="3-5-万家丽购物广场28楼天台停机坪打卡"><a href="#3-5-万家丽购物广场28楼天台停机坪打卡" class="headerlink" title="3.5 万家丽购物广场28楼天台停机坪打卡"></a>3.5 万家丽购物广场28楼天台停机坪打卡</h4><ul><li>这个地方真的是太赞了 太绝了 👍  吹爆！宇宙中心！</li><li>可以俯瞰整个长沙  白天和晚上都很不错</li><li>如果天气好的话拍起来真的超好看的！！</li><li>有四个角可以上去，电梯可能要找一下，最好提前在小红书或者其他平台之类的找要上的电梯位置</li><li>上电梯出来就会被震撼到  上面的装潢跟其他地方的装潢不一样</li><li>建筑的很有中国特色 一出门就是被大金黄闪瞎眼 看起来又贵又伟大</li></ul><p><strong>科普万家丽的福缘文化</strong></p><p>万家丽在世界上最大的空中机场——万家丽盘古福缘机场之中，花费巨资打造了盘古开天、华胥践雷、皇羲神圣、女娲造人、玉皇大帝、唐僧西天取经、嫦娥奔月、如来佛祖八个大型铜像壁画群。</p><p>好像忘记拍建筑群的照片了…… 只有拍远眺视角的长沙！大家一定要去感受一番土豪气息</p><h3 id="四、Day-3-8-10-周一"><a href="#四、Day-3-8-10-周一" class="headerlink" title="四、Day 3 8.10 周一"></a><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-10-IMG_8663.jpg" alt="IMG_8663">四、Day 3 8.10 周一</h3><h4 id="4-1-岳麓山"><a href="#4-1-岳麓山" class="headerlink" title="4.1 岳麓山"></a>4.1 岳麓山</h4><ul><li>提前预约 免费 🎫</li><li>地铁 🚇 2号线 榕湾镇 3号口出</li><li>上山索道15💰 学生票，下山滑道35 💰</li><li>南门进-&gt;走路到岳麓书院和爱晚亭-&gt;坐观光车/走路到山顶-&gt;休息一下（4点前结束）-&gt;走五分钟，到滑道处下-&gt;滑道下到东门，地铁 🚇 四号线</li><li>（这边真正实施起来踩雷了 那天不知道怎么了 磨蹭的比较晚出门 好像是下雨了 然后去得晚 到上面的时候滑道就没了……</li></ul><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-12-IMG_8732.jpg" alt="IMG_8732" style="zoom:67%;"><h4 id="4-2-橘子洲"><a href="#4-2-橘子洲" class="headerlink" title="4.2 橘子洲"></a>4.2 橘子洲</h4><ul><li>地铁 🚇 2号线橘子洲 1号口出</li><li>还是坐观光车吧 学生票 10¥（一定要做观光车 直接去最后看雕像 根本走不动……</li><li>别用轻颜对着雕像拍照或者把妆容去掉 哈哈哈哈哈哈哈 不然毛爷爷的面部也会被识别到然后上妆了 </li></ul><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-12-IMG_8707.jpg" alt="IMG_8707" style="zoom:67%;"><p><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-13-IMG_8736.JPG" alt="IMG_8736"></p><figure class="half">  <img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-13-IMG_5250.jpg" alt="IMG_4894" style="zoom:100%;display:inline-block;"></figure><p>杜甫江阁那边那条路黄昏 🌆 挺棒的，晚上一般都是去几个有名的街逛，都靠的很近，街头经常会碰到有人在路边唱歌，都还蛮有趣的。</p><h3 id="五、Day-4-8-11-周二"><a href="#五、Day-4-8-11-周二" class="headerlink" title="五、Day 4 8.11 周二"></a>五、Day 4 8.11 周二</h3><h4 id="5-1-湖南省博物馆"><a href="#5-1-湖南省博物馆" class="headerlink" title="5.1 湖南省博物馆"></a>5.1 湖南省博物馆</h4><ul><li>公交 🚌  3、113、136…… </li><li>提前3天到公众号预约！！🎫  可能正常时间去约比较约不到  我们好像凌晨的时候约的hhhhh 反正要记得</li><li>就正常的旅游景点，可以去看看，了解一下那边的文化</li><li>比较吸睛的应该是 去参观千年女尸了 这个是最后才看到的 整个游览过程就是按着挖墓顺序来的</li></ul><h4 id="5-2-梅溪湖国际文化艺术中心"><a href="#5-2-梅溪湖国际文化艺术中心" class="headerlink" title="5.2 梅溪湖国际文化艺术中心"></a>5.2 梅溪湖国际文化艺术中心</h4><p><strong>「流动的永恒」</strong></p><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-11-IMG_8859.jpg" alt="IMG_8859" style="zoom:50%;"><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-11-IMG_8822.jpg" alt="IMG_8822" style="zoom:50%;"><ul><li><p>地铁 🚇 2号线 文化艺术中心</p></li><li><p>设计师是扎哈  太爱她的作品了 每一个都令人十分惊艳</p></li><li><p>设计稿就已经不可思议了 最后落地更令人不可思议</p><p><strong>「没有曲线，就没有未来。我觉得美学中最重要的不是对称，而是动感。」</strong></p><p>立下flag 下次要进去里面探索  内外都很震撼</p><figure class="half">  <img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-11-IMG_8843.JPG" alt="IMG_4851" style="zoom:10%;float:left">  <img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-11-IMG_8854.jpg" alt="IMG_4857_副本" style="zoom:11%;"></figure></li></ul><h3 id="六、-Day-5-8-12-周三"><a href="#六、-Day-5-8-12-周三" class="headerlink" title="六、 Day 5 8.12 周三"></a>六、 Day 5 8.12 周三</h3><h4 id="6-1-返程"><a href="#6-1-返程" class="headerlink" title="6.1 返程"></a>6.1 返程</h4><ul><li><p>提前买了茶颜悦色、黑色经典臭豆腐的伴手礼</p><ul><li>黑色经典臭豆腐好吃！ 在网上也可以买</li></ul></li><li><p>长沙 ✈️ 厦门</p><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/11-06-13-IMG_7774.JPG" alt="IMG_7774" style="zoom:50%;"></li></ul><h3 id="我们一定会再相见的。"><a href="#我们一定会再相见的。" class="headerlink" title="我们一定会再相见的。"></a>我们一定会再相见的。</h3>]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Trip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于南京</title>
      <link href="/2020/07/09/%E5%85%B3%E4%BA%8E%E5%8D%97%E4%BA%AC/"/>
      <url>/2020/07/09/%E5%85%B3%E4%BA%8E%E5%8D%97%E4%BA%AC/</url>
      
        <content type="html"><![CDATA[<img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/07-09-01-07-09-01-07-09-01-54CB8E07-1352-46D8-997C-EA76E48110A3.jpeg" alt="image-20200709012402620" style="zoom:30%;"><h2 id="一、区域划分及地铁路线分布"><a href="#一、区域划分及地铁路线分布" class="headerlink" title="一、区域划分及地铁路线分布"></a>一、区域划分及地铁路线分布</h2><p>路线查看App：Metroman</p><p>公共交通付费方式：支付宝扫码（南京地铁电子卡、金陵通乘车卡）</p><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/07-09-01-FC01FCB1-9ABD-4A6E-83DE-42CB11AFC43B.jpeg" style="zoom:50%;"><h2 id="二、旅游小Tips"><a href="#二、旅游小Tips" class="headerlink" title="二、旅游小Tips"></a>二、旅游小Tips</h2><h3 id="2-1-关于住宿"><a href="#2-1-关于住宿" class="headerlink" title="2.1 关于住宿"></a>2.1 关于住宿</h3><ul><li>最好选择靠近地铁站的地方入住</li><li>综合经济能力，尽量选择靠近市区的地方</li></ul><h3 id="2-2-关于交通"><a href="#2-2-关于交通" class="headerlink" title="2.2 关于交通"></a>2.2 关于交通</h3><ul><li>一般都是地铁，可以提前规划按照地铁线路来安排行程（超方便</li><li>⚠️注意地铁的运营时间，太晚就停运只能打车 <a href="http://nj.bendibao.com/ditie/time.shtml" target="_blank" rel="noopener">查看运营时间</a></li><li>根据目的地选择路线，一般用高德地图都没有坑</li></ul><h3 id="2-3-关于吃喝"><a href="#2-3-关于吃喝" class="headerlink" title="2.3 关于吃喝"></a>2.3 关于吃喝</h3><ul><li>特色的餐厅or小吃一般都会偏甜</li><li>不知道吃啥，小红书搜出来的一般是没有坑的，基本都在新街口附近</li><li>一般都要提前排号，饭点排队人超多</li></ul><h2 id="三、热门打卡地点"><a href="#三、热门打卡地点" class="headerlink" title="三、热门打卡地点"></a>三、热门打卡地点</h2><h3 id="3-1-南京博物院"><a href="#3-1-南京博物院" class="headerlink" title="3.1 南京博物院"></a>3.1 南京博物院</h3><ul><li>门票🎫免费，提前预约（微信小程序：南京博物院）</li><li>地铁站：二号线·明故宫站 一号出口（还需要走几分钟的路）</li><li>游玩时长：2～3h （没有把所有馆都逛一遍，去了历史馆、数字馆、艺术馆、民国馆</li><li>tips：<ul><li>一定要提前预约</li><li>提前去排队，节假日的时候队超级长</li><li>一定要带身份证</li><li>自行备水 </li></ul></li></ul><h3 id="3-2-明孝陵"><a href="#3-2-明孝陵" class="headerlink" title="3.2 明孝陵"></a>3.2 明孝陵</h3><p>一个很大景区，就选择性的去了几个点而已</p><h4 id="3-3-中山陵"><a href="#3-3-中山陵" class="headerlink" title="3.3 中山陵"></a>3.3 中山陵</h4><ul><li>不需要门票，提前预约即可</li><li>地铁站：二号线·钟灵街</li><li>tips：<ul><li>建议早上去，夏天中午太热</li><li>记得备水</li><li>不喜欢爬山的建议放弃，有超多楼梯，然后上去看5分钟而已就下来了</li><li>不过在最上面的视野超棒的</li><li>如果要去美龄宫、音乐台等其他景点，买个观光车的票，否则会累死</li></ul></li></ul><h4 id="3-4-美龄宫"><a href="#3-4-美龄宫" class="headerlink" title="3.4 美龄宫"></a>3.4 美龄宫</h4><ul><li>需要购买门票🎫</li><li>逛完中山陵即可，可以买联票，顺便去音乐台</li><li>民国别墅，仅是参观</li></ul><h4 id="3-5-音乐台"><a href="#3-5-音乐台" class="headerlink" title="3.5 音乐台"></a>3.5 音乐台</h4><ul><li>需要购买门票🎫</li><li>极限挑战取景过，就是张艺兴怕尖嘴动物那一期</li><li>有很多鸽子</li><li>暂时没去过，我看过学姐发图，好像还不错，mark了</li></ul><h4 id="3-6-梅花山"><a href="#3-6-梅花山" class="headerlink" title="3.6 梅花山"></a>3.6 梅花山</h4><ul><li>需要购买门票🎫，有学生票</li><li>地铁站：二号线·苜蓿园</li><li>具有季节性，最好梅花盛开的季节前往</li></ul><h3 id="3-7-老门东"><a href="#3-7-老门东" class="headerlink" title="3.7 老门东"></a>3.7 老门东</h3><ul><li>不需要门票</li><li>地铁站：三号线·武定门</li><li>个人觉得比夫子庙好，也可以先去夫子庙再到老门东，两处挨着</li><li>游玩时长：1～2h</li><li>tips：<ul><li>小姐姐可以穿汉服拍照📷</li><li>尽量选择在老门东吃东西，夫子庙有点是骗游客的</li></ul></li><li>美食街店铺亲测<ul><li>小郑酥烧饼：梅干菜烧饼</li><li>蒋有记牛肉锅贴：牛肉锅贴、小馄饨</li><li>鸡鸣汤包：xx汤包、小馄饨</li><li>沈记臭豆腐</li><li>蓝老大糖藕店（甜）</li></ul></li><li>老南京 又见炊烟·柴火馄饨：三条营10号，要仔细找，在小巷子里面，老爷爷老奶奶开了几十年，门店很旧，充满时代感</li></ul><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/07-09-17-IMG_3042.JPG" alt="IMG_3042" style="zoom:80%;"><h3 id="3-8-鸡鸣寺"><a href="#3-8-鸡鸣寺" class="headerlink" title="3.8 鸡鸣寺"></a>3.8 鸡鸣寺</h3><ul><li>需要购买门票🎫，无学生优惠，有点坑（现场只能用纸币购买</li><li>地铁站：三号线/四号线·鸡鸣寺站</li><li>据说求姻缘很灵，大家快冲</li></ul><h3 id="3-9-明城墙"><a href="#3-9-明城墙" class="headerlink" title="3.9 明城墙"></a>3.9 明城墙</h3><ul><li>需要购买门票</li><li>在鸡鸣寺附近，在可以绕着城墙走，环着玄武湖</li><li>下来没有其他安排，可以在玄武湖划船hhh</li></ul><h3 id="3-10-五台山先锋书店总店"><a href="#3-10-五台山先锋书店总店" class="headerlink" title="3.10 五台山先锋书店总店"></a>3.10 五台山先锋书店总店</h3><ul><li>地铁站：一号线·珠江路（下地铁还要走蛮久的路，建议打车or共享单车</li><li>拍照打卡，寄明信片</li></ul><p><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/07-09-17-IMG_2452.JPG" alt="IMG_2452"></p><h3 id="3-11-关于新街口"><a href="#3-11-关于新街口" class="headerlink" title="3.11 关于新街口"></a>3.11 关于新街口</h3><ul><li>各种品牌专柜，门店……（每次进去都剁手</li><li>吃喝门店<ul><li>南京大牌档<ul><li>美龄粥</li><li>烤鸭包</li><li>江米扣肉</li><li>地锅小公鸡</li><li>招牌咸水鸭</li><li>蟹黄包</li><li>……</li></ul></li><li>桂满陇</li><li>明发茶餐厅</li><li>点都德</li><li>蛋魂汉堡</li><li>小杨生煎</li><li>首尔大排档</li><li>西木栗子（仙豆糕超好吃</li><li>泸溪河</li><li>喜茶、乐乐茶、奈雪的茶</li><li>……（待打卡</li></ul></li></ul><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/07-09-20-07-09-17-07-09-16-IMG_4293.JPEG" alt="IMG_4293" style="zoom:200%;"><h2 id="四、小众打卡地点"><a href="#四、小众打卡地点" class="headerlink" title="四、小众打卡地点"></a>四、小众打卡地点</h2><blockquote><p>上述场景在节假日人都是爆满的，以下是中秋节及国庆节和朋友去的比较小众冷门的地方，亲测不拥挤，非照骗</p></blockquote><h3 id="4-1-市区高校"><a href="#4-1-市区高校" class="headerlink" title="4.1 市区高校"></a>4.1 市区高校</h3><h4 id="4-1-1-南京大学·鼓楼校区"><a href="#4-1-1-南京大学·鼓楼校区" class="headerlink" title="4.1.1 南京大学·鼓楼校区"></a>4.1.1 南京大学·鼓楼校区</h4><ul><li>地铁站：鼓楼站或珠江路站都可以，都要走一段路</li><li>进出自由，校内很静谧</li></ul><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/07-09-19-IMG_2188.jpg" alt="IMG_2188" style="zoom:100%;"><h4 id="4-1-2-东南大学·四牌楼校区"><a href="#4-1-2-东南大学·四牌楼校区" class="headerlink" title="4.1.2 东南大学·四牌楼校区"></a>4.1.2 东南大学·四牌楼校区</h4><ul><li>地铁站：鸡鸣寺站（离鸡鸣寺很近，可以安排进去，骑个单车很快就到了</li><li>超喜欢这条中央大道的 </li></ul><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/07-09-19-Snapseed.jpg" alt="Snapseed" style="zoom:50%;"><h3 id="4-2-保利大剧院-amp-南京眼"><a href="#4-2-保利大剧院-amp-南京眼" class="headerlink" title="4.2 保利大剧院&amp;南京眼"></a>4.2 保利大剧院&amp;南京眼</h3><ul><li>地铁站：二号线·元通站（下地铁打车/共享单车到保利大剧院</li><li>可以提前看有没有想看的音乐剧或音乐会在剧院巡演可以考虑看看</li><li>不进去也可以只是拍照逛逛 建筑真超棒👍</li><li>下午到的话，可以顺着太阳下山拍光影类照片，然后天黑了可以去南京眼走走（附近暂时不知道有什么吃的</li><li>tips<ul><li>个人认为这边交通不是很方便，最好打车到地铁站之类的</li><li>中午吃多一点，那边好像没啥吃的</li></ul></li></ul><p><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/07-09-19-IMG_4302.JPG" alt="IMG_4302"></p><h3 id="4-3-中山码头-amp-浦口火车站"><a href="#4-3-中山码头-amp-浦口火车站" class="headerlink" title="4.3 中山码头&amp;浦口火车站"></a>4.3 中山码头&amp;浦口火车站</h3><ul><li>交通：地铁二号线·大行宫站➡️转31路公交到中山码头</li><li>中山码头乘船过江到浦口码头，刷支付宝公交码即可</li><li>浦口老区感觉还是很有老南京的气息，保留民国建筑，据说是朱自清《背影》经典对话出自于浦口火车站，还是《情深深雨濛濛》的取景地</li><li>由于不是很熟悉，所以我们在下码头对面的火车站长廊找了一个大爷用小破车载我们去三个点采景（来回三人120¥</li><li>历史感超级浓，大爷还跟我们介绍历史，都挺老旧了</li><li>tips：<ul><li>最好带个花露水or无比滴，蚊子多</li><li>吃啥我也不太记得，我记得我们傍晚回中山码头打车去南京长江大桥溜了一圈，发现过了游客观赏的时间，就去吃海底捞了👍</li></ul></li></ul><img src="https://zero-pic-bed.oss-cn-shanghai.aliyuncs.com/uPic/07-09-20-07-09-20-3CAB4AD5-A7E7-4181-AAC4-3EA79319DDD8.JPEG" alt="3CAB4AD5-A7E7-4181-AAC4-3EA79319DDD8" style="zoom:200%;">]]></content>
      
      
      <categories>
          
          <category> Life </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Life </tag>
            
            <tag> Trip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识微服务</title>
      <link href="/2020/03/25/%E5%88%9D%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
      <url>/2020/03/25/%E5%88%9D%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="初识微服务"><a href="#初识微服务" class="headerlink" title="初识微服务"></a>初识微服务</h2><h3 id="什么是微服务"><a href="#什么是微服务" class="headerlink" title="什么是微服务"></a>什么是微服务</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><ul><li>将原本独立的系统拆分成多个小型服务</li><li>这些小型服务各自独立（各自维护自身的数据存储，业务开发，自动化测试以及独立部署机制独立扩展）</li><li>服务之间通过基于HTTP的RESTful API进行通信协作</li><li>更为准确的为每一个服务评估性能容量</li><li>轻量级的通信协作</li><li>可以用不同语言来编写</li></ul><h3 id="存在的挑战"><a href="#存在的挑战" class="headerlink" title="存在的挑战"></a>存在的挑战</h3><ul><li>运维人员需要维护的进程数量增加</li><li>接口要保持一致性，原本单体应用中的代码依赖变成了服务之间的通信依赖</li><li>分布式的复杂性，需要考虑诸多因素 如网络延时、分布式事务、异步消息…</li></ul><h3 id="九大特性"><a href="#九大特性" class="headerlink" title="九大特性"></a>九大特性</h3><h4 id="服务组件化"><a href="#服务组件化" class="headerlink" title="服务组件化"></a>服务组件化</h4><ul><li>一种进程外的组件</li><li>通过HTTP等通信协议进行协作</li></ul><h4 id="按业务组织团队"><a href="#按业务组织团队" class="headerlink" title="按业务组织团队"></a>按业务组织团队</h4><ul><li>按照业务线的方式进行拆分</li><li>有效减少服务内部修改所产生的内耗</li><li>团队边界更为清晰</li></ul><h4 id="做“产品”的态度"><a href="#做“产品”的态度" class="headerlink" title="做“产品”的态度"></a>做“产品”的态度</h4><ul><li>每个小团队都应该以做产品的方式，对产品的整个生命周期负责</li></ul><h4 id="智能端点与哑管道"><a href="#智能端点与哑管道" class="headerlink" title="智能端点与哑管道"></a>智能端点与哑管道</h4><ul><li><p>不再如同单体应用的组件直接通过函数调用进行交互协作</p></li><li><p>由于服务不再一个进程中，组件间的通信模式发生了改变</p></li><li><p>若仅仅是RPC的方式调用，会导致微服务之间繁琐的通信</p><p>更粗粒度的通信协议，微服务架构中，通常以这两种服务调用方式</p></li><li><p>使用HTTP的<code>RESTful API</code>或轻量级的消息发送协议，实现信息传递与服务调用的触发</p></li><li><p>通过再轻量级的消息总线上传递消息，类似RabbitMQ等一些提供可靠异步交换的中间件</p></li></ul><h4 id="去中心化治理"><a href="#去中心化治理" class="headerlink" title="去中心化治理"></a>去中心化治理</h4><h4 id="去中心化管理数据"><a href="#去中心化管理数据" class="headerlink" title="去中心化管理数据"></a>去中心化管理数据</h4><ul><li>将原数据库中的存储内容拆分到新的同平台的其他数据库实例中</li><li>将一些具有特殊结构或者业务特性的数据存储到一些其他技术的数据库实例中(如把日志信息存储到MongoDB中或者用户登录信息存储到Redis中)</li></ul><h4 id="基础设施自动化"><a href="#基础设施自动化" class="headerlink" title="基础设施自动化"></a>基础设施自动化</h4><ul><li>自动化测试</li><li>自动化部署</li></ul><h4 id="容错设计"><a href="#容错设计" class="headerlink" title="容错设计"></a>容错设计</h4><ul><li>部分服务出现故障，而其他服务仍可正常运行</li><li>但是设计时必须要考虑自动恢复服务，当故障蔓延的时候必须要快速检查出故障源</li><li>因此希望再每个服务中实现监控和日志记录的组件，比如服务状态、断路器状态、吞吐量、网络延迟等关键数据的仪表盘等</li></ul><h4 id="演进式设计"><a href="#演进式设计" class="headerlink" title="演进式设计"></a>演进式设计</h4><ul><li>初期使用单体系统的方式来设计与实施</li><li>随着系统的发展或者业务的需要，将一些经常变动或者是有一定时间效应的内容进行微服务处理</li><li>逐渐将单体系统中多变的模块逐步拆分出来</li><li>而稳定不多变的模块就形成一个核心微服务</li></ul><h3 id="微服务架构初期"><a href="#微服务架构初期" class="headerlink" title="微服务架构初期"></a>微服务架构初期</h3><p>在微服务架构初期，有一些需要解决的问题，下列是各个问题的一些开源解决方案</p><ul><li><p>服务治理</p><p>阿里巴巴开源的Dubbo和当当网在其基础上扩展的DubboX，Netfix的Eureka，Apache的Consul… </p></li><li><p>分布式配置管理</p><p>百度的Disconf，Netfix的Archaius，360的QConf，Spring Cloud的Config，淘宝的Diamond…</p></li><li><p>批量任务</p><p>当当网的Elastic-Job，LinkedIn的Azkaban，Spring Cloud的Task…</p></li><li><p>服务跟踪</p><p>京东的Hydra，Spring Cloud的Sleuth，Twitter的Zipkin</p></li></ul><h3 id="为什么选择Spring-Cloud"><a href="#为什么选择Spring-Cloud" class="headerlink" title="为什么选择Spring Cloud"></a>为什么选择Spring Cloud</h3><p>前面列举的框架，只是解决微服务中的某一个问题，而Spring Cloud则是一个解决微服务架构实施的综合性解决框架，在Spring社区的整合下，做了大量的兼容性测试，保证了其拥有更好的稳定性。</p>]]></content>
      
      
      <categories>
          
          <category> Spring Cloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
            <tag> Spring Cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis之BitMap</title>
      <link href="/2020/03/23/Redis%D6%AEBitMap/"/>
      <url>/2020/03/23/Redis%D6%AEBitMap/</url>
      
        <content type="html"><![CDATA[<h3 id="Redis的BitMap"><a href="#Redis的BitMap" class="headerlink" title="Redis的BitMap"></a>Redis的BitMap</h3><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><ul><li>通过一个bit位来表示某个元素对应的值或者状态，其中的key就是对应元素本身</li><li>版本：redis 2.2.0</li><li>新增 setbit,getbit,bitcount几个bitmap相关命令</li></ul><h4 id="setbit命令说明"><a href="#setbit命令说明" class="headerlink" title="setbit命令说明"></a>setbit命令说明</h4><p>指令 <code>setbit key offset value</code></p><ul><li>复杂度o(1)</li><li>设置或者清空key的取决于value(字符串)在offset处的bit值(只能只0或者1)</li><li>字符串会进行伸展(grown)以确保它可以将value 保存在指定的偏移量上。当字符串值进行伸展时，空白位置以 0 填充。</li><li>offset参数必须大于或等于0，小于2^32</li><li><strong>返回值</strong>  字符串值指定偏移量上原来存储的位（bit)</li></ul><h4 id="getbit命令说明"><a href="#getbit命令说明" class="headerlink" title="getbit命令说明"></a>getbit命令说明</h4><p>指令<code>getbit key offest</code></p><ul><li>对 <code>key</code> 所储存的字符串值，获取指定偏移量上的位(bit)。</li><li>当 <code>offset</code> 比字符串值的长度大，或者 <code>key</code> 不存在时，返回 <code>0</code> </li><li><strong>返回值</strong> 字符串指定偏移量上的位</li></ul><h4 id="bitcount命令说明"><a href="#bitcount命令说明" class="headerlink" title="bitcount命令说明"></a>bitcount命令说明</h4><p>指令<code>bitcount key</code>、<code>bitcount key start end</code></p><ul><li>计算给定字符串中，被设置为1的比特位的数量</li><li>一般情况下，给定的整个字符串都会被进行计数，通过指定额外的 <code>start</code> 或 <code>end</code> 参数，可以让计数只在特定的位上进行</li><li><code>start</code> 和 <code>end</code> 参数的设置和 <code>GETRANGE</code> 命令类似，都可以使用负数值： 比如 <code>-1</code> 表示最后一个字节， <code>-2</code>表示倒数第二个字节，以此类推</li><li>不存在的 <code>key</code> 被当成是空字符串来处理，因此对一个不存在的 <code>key</code> 进行 <code>BITCOUNT</code> 操作，结果为 0。</li><li><strong>返回值</strong> 被设置为1的位的数量</li></ul><h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><h5 id="1-用户签到"><a href="#1-用户签到" class="headerlink" title="1. 用户签到"></a>1. 用户签到</h5><pre class=" language-java"><code class="language-java">Jedis redis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedis</span><span class="token punctuation">(</span><span class="token string">"192.168.31.89"</span><span class="token punctuation">,</span><span class="token number">6379</span><span class="token punctuation">,</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//用户uid</span>String uid <span class="token operator">=</span> <span class="token string">"1"</span><span class="token punctuation">;</span>String cacheKey <span class="token operator">=</span> <span class="token string">"sign_"</span><span class="token operator">+</span>Integer<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>uid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//记录有uid的key</span><span class="token comment" spellcheck="true">// $cacheKey = sprintf("sign_%d", $uid);</span><span class="token comment" spellcheck="true">//开始有签到功能的日期</span>String startDate <span class="token operator">=</span> <span class="token string">"2017-01-01"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//今天的日期</span>String todayDate <span class="token operator">=</span> <span class="token string">"2017-01-21"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//计算offset(时间戳)</span><span class="token keyword">long</span> startTime <span class="token operator">=</span> <span class="token function">dateParase</span><span class="token punctuation">(</span>startDate<span class="token punctuation">,</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">long</span> todayTime <span class="token operator">=</span> <span class="token function">dateParase</span><span class="token punctuation">(</span>todayDate<span class="token punctuation">,</span><span class="token string">"yyyy-MM-dd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">long</span> offset <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>todayTime <span class="token operator">-</span> startTime<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">86400</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"今天是第"</span><span class="token operator">+</span>offset<span class="token operator">+</span><span class="token string">"天"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//签到</span><span class="token comment" spellcheck="true">//一年一个用户会占用多少空间呢？大约365/8=45.625个字节，好小，有木有被惊呆？</span>redis<span class="token punctuation">.</span><span class="token function">setbit</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span>offset<span class="token punctuation">,</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//查询签到情况</span><span class="token keyword">boolean</span> bitStatus <span class="token operator">=</span> redis<span class="token punctuation">.</span><span class="token function">getbit</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">,</span> offset<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//判断是否已经签到</span><span class="token comment" spellcheck="true">//计算总签到次数</span><span class="token keyword">long</span> qdCount <span class="token operator">=</span> redis<span class="token punctuation">.</span><span class="token function">bitcount</span><span class="token punctuation">(</span>cacheKey<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="2-统计活跃用户"><a href="#2-统计活跃用户" class="headerlink" title="2. 统计活跃用户"></a>2. 统计活跃用户</h5><p> 使用时间作为cacheKey，然后用户ID为offset，如果当日活跃过就设置为1 那么我该如果计算某几天/月/年的活跃用户呢(暂且约定，统计时间内只有有一天在线就称为活跃)</p><p><strong>一个新的命令</strong>  <code>BITOP operation destkey key [key ...]</code></p><p><strong>说明</strong> ：</p><ol><li>对一个或多个保存二进制位的字符串 key 进行位元操作，并将结果保存到 destkey 上</li><li>BITOP 命令支持 AND 、 OR 、 NOT 、 XOR 这四种操作中的任意一种参数 </li></ol><pre class=" language-java"><code class="language-java">Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>List<span class="token operator">&lt;</span>Integer<span class="token operator">>></span>dateActiveuser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Jedis redis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Jedis</span><span class="token punctuation">(</span><span class="token string">"192.168.31.89"</span><span class="token punctuation">,</span><span class="token number">6379</span><span class="token punctuation">,</span><span class="token number">100000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Integer<span class="token punctuation">[</span><span class="token punctuation">]</span> temp01 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">;</span>List<span class="token operator">&lt;</span>Integer<span class="token operator">></span>temp01List <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Collections<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>temp01List<span class="token punctuation">,</span>temp01<span class="token punctuation">)</span><span class="token punctuation">;</span>dateActiveuser<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"2017-01-10"</span><span class="token punctuation">,</span>temp01List<span class="token punctuation">)</span><span class="token punctuation">;</span>Integer<span class="token punctuation">[</span><span class="token punctuation">]</span> temp02 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">}</span><span class="token punctuation">;</span>List<span class="token operator">&lt;</span>Integer<span class="token operator">></span>temp02List <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Collections<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>temp02List<span class="token punctuation">,</span>temp02<span class="token punctuation">)</span><span class="token punctuation">;</span>dateActiveuser<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"2017-01-11"</span><span class="token punctuation">,</span>temp02List<span class="token punctuation">)</span><span class="token punctuation">;</span>Integer<span class="token punctuation">[</span><span class="token punctuation">]</span> temp03 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>List<span class="token operator">&lt;</span>Integer<span class="token operator">></span>temp03List <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Collections<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>temp03List<span class="token punctuation">,</span>temp03<span class="token punctuation">)</span><span class="token punctuation">;</span>dateActiveuser<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"2017-01-12"</span><span class="token punctuation">,</span>temp03List<span class="token punctuation">)</span><span class="token punctuation">;</span>Integer<span class="token punctuation">[</span><span class="token punctuation">]</span> temp04 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>List<span class="token operator">&lt;</span>Integer<span class="token operator">></span>temp04List <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Collections<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>temp04List<span class="token punctuation">,</span>temp04<span class="token punctuation">)</span><span class="token punctuation">;</span>dateActiveuser<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"2017-01-13"</span><span class="token punctuation">,</span>temp04List<span class="token punctuation">)</span><span class="token punctuation">;</span>Integer<span class="token punctuation">[</span><span class="token punctuation">]</span> temp05 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>List<span class="token operator">&lt;</span>Integer<span class="token operator">></span>temp05List <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Collections<span class="token punctuation">.</span><span class="token function">addAll</span><span class="token punctuation">(</span>temp05List<span class="token punctuation">,</span>temp05<span class="token punctuation">)</span><span class="token punctuation">;</span>dateActiveuser<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"2017-01-14"</span><span class="token punctuation">,</span>temp05List<span class="token punctuation">)</span><span class="token punctuation">;</span>String date<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"2017-01-10"</span><span class="token punctuation">,</span><span class="token string">"2017-01-11"</span><span class="token punctuation">,</span><span class="token string">"2017-01-12"</span><span class="token punctuation">,</span><span class="token string">"2017-01-13"</span><span class="token punctuation">,</span><span class="token string">"2017-01-14"</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//测试数据放入redis中</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>date<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>dateActiveuser<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>date<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        redis<span class="token punctuation">.</span><span class="token function">setbit</span><span class="token punctuation">(</span>date<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> dateActiveuser<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>date<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//bitOp</span>redis<span class="token punctuation">.</span><span class="token function">bitop</span><span class="token punctuation">(</span>BitOP<span class="token punctuation">.</span>AND<span class="token punctuation">,</span> <span class="token string">"stat"</span><span class="token punctuation">,</span> <span class="token string">"stat_2017-01-10"</span><span class="token punctuation">,</span> <span class="token string">"stat_2017-01-11"</span><span class="token punctuation">,</span><span class="token string">"stat_2017-01-12"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总活跃用户："</span><span class="token operator">+</span>redis<span class="token punctuation">.</span><span class="token function">bitcount</span><span class="token punctuation">(</span><span class="token string">"stat"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>redis<span class="token punctuation">.</span><span class="token function">bitop</span><span class="token punctuation">(</span>BitOP<span class="token punctuation">.</span>AND<span class="token punctuation">,</span> <span class="token string">"stat1"</span><span class="token punctuation">,</span> <span class="token string">"stat_2017-01-10"</span><span class="token punctuation">,</span> <span class="token string">"stat_2017-01-11"</span><span class="token punctuation">,</span><span class="token string">"stat_2017-01-14"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总活跃用户："</span><span class="token operator">+</span>redis<span class="token punctuation">.</span><span class="token function">bitcount</span><span class="token punctuation">(</span><span class="token string">"stat1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>redis<span class="token punctuation">.</span><span class="token function">bitop</span><span class="token punctuation">(</span>BitOP<span class="token punctuation">.</span>AND<span class="token punctuation">,</span> <span class="token string">"stat2"</span><span class="token punctuation">,</span> <span class="token string">"stat_2017-01-10"</span><span class="token punctuation">,</span> <span class="token string">"stat_2017-01-11"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"总活跃用户："</span><span class="token operator">+</span>redis<span class="token punctuation">.</span><span class="token function">bitcount</span><span class="token punctuation">(</span><span class="token string">"stat2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>假设当前站点有5000W用户，那么一天的数据大约为50000000/8/1024/1024=6MB</p><h5 id="3-用户在线状态"><a href="#3-用户在线状态" class="headerlink" title="3. 用户在线状态"></a>3. 用户在线状态</h5><p>前段时间开发一个项目，对方给我提供了一个查询当前用户是否在线的接口。不了解对方是怎么做的，自己考虑了一下，使用bitmap是一个节约空间效率又高的一种方法，只需要一个key，然后用户ID为offset，如果在线就设置为1，不在线就设置为0，和上面的场景一样，5000W用户只需要6MB的空间。</p><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//批量设置在线状态</span><span class="token variable">$uids</span> <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">500000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$uids</span> <span class="token keyword">as</span> <span class="token variable">$uid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token variable">$redis</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setBit</span><span class="token punctuation">(</span><span class="token string">'online'</span><span class="token punctuation">,</span> <span class="token variable">$uid</span><span class="token punctuation">,</span> <span class="token variable">$uid</span> <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">//一个一个获取状态</span><span class="token variable">$uids</span> <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">500000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$startTime</span> <span class="token operator">=</span> <span class="token function">microtime</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$uids</span> <span class="token keyword">as</span> <span class="token variable">$uid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">echo</span> <span class="token variable">$redis</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getBit</span><span class="token punctuation">(</span><span class="token string">'online'</span><span class="token punctuation">,</span> <span class="token variable">$uid</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token variable">$endTime</span> <span class="token operator">=</span> <span class="token function">microtime</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//在我的电脑上，获取50W个用户的状态需要25秒</span><span class="token keyword">echo</span> <span class="token string">"total:"</span> <span class="token punctuation">.</span> <span class="token punctuation">(</span><span class="token variable">$endTime</span> <span class="token operator">-</span> <span class="token variable">$startTime</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token string">"s"</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*** 对于批量的获取，上面是一种效率低的办法，实际可以通过get获取到value，然后自己计算 * 具体计算方法改天再写吧，之前写的代码找不见了。。。*/</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周报0316~0322</title>
      <link href="/2020/03/22/%E5%91%A8%E6%8A%A50316~0322/"/>
      <url>/2020/03/22/%E5%91%A8%E6%8A%A50316~0322/</url>
      
        <content type="html"><![CDATA[<h3 id="主要完成内容"><a href="#主要完成内容" class="headerlink" title="主要完成内容"></a>主要完成内容</h3><ol><li>完成缅怀秦老先生献花点烛留言板的后端开发，并上线-&gt;<a href="http://mournqinhuali.njupt.edu.cn/mourn/" target="_blank" rel="noopener">传送门</a></li><li>完成电费/跑操预警推送后台人为控制，已上线</li><li>讨论并且敲定新注册方案，已进入测试阶段</li></ol><h3 id="踩坑总结"><a href="#踩坑总结" class="headerlink" title="踩坑总结"></a>踩坑总结</h3><h4 id="项目war包部署"><a href="#项目war包部署" class="headerlink" title="项目war包部署"></a>项目war包部署</h4><ol><li><p>打成war包要将springboot自带的tomcat排除掉</p><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>groupId<span class="token operator">></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>    <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>tomcat<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>    <span class="token operator">&lt;</span>scope<span class="token operator">></span>provided<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span></code></pre></li><li><p>使用外部tomcat还需要继承<code>SpringBootServletInitializer</code>类，并且需要重写configure方法</p><p>如果不继承该类会怎么样呢？答：项目无法使用外部容器启动</p><p>如果重复继承会怎么样呢？答：项目可以启动，但是会遇到很多不可预期的问题</p><p><img src="https://www.yunforum.net/uploadfile/editor/0/2/2808.png" alt="img"></p></li></ol><h4 id="nginx配置问题"><a href="#nginx配置问题" class="headerlink" title="nginx配置问题"></a>nginx配置问题</h4><ul><li>root和alias的区别主要在于替换的部分，root模式中，会把root配置的路径替换匹配后的url中的host。alias则把他指定的路径，替换url中匹配的部分。指令中的斜杠对于root指令没有影响，对于alise则按照替换规则匹配即可。</li><li>通常最佳实际是配置一个项目的根root，其他的文件夹则使用alias，毕竟alias更加灵活。</li><li>修改配置文件之后要重启，<code>nginx -s reload</code></li></ul><pre class=" language-nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">^</span><span class="token operator">~</span> <span class="token operator">/</span>static <span class="token punctuation">{</span>    <span class="token keyword">root</span> <span class="token operator">/</span>vagrant<span class="token operator">/</span>pro<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#计算路径/vagrant/pro + /static/stc.jpg</span></code></pre><pre class=" language-nginx"><code class="language-nginx"><span class="token keyword">location</span> <span class="token operator">^</span><span class="token operator">~</span> <span class="token operator">/</span>upload <span class="token punctuation">{</span>    <span class="token keyword">alias</span> <span class="token operator">/</span>vagrant<span class="token operator">/</span>pro<span class="token operator">/</span>upload<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">#计算路径 /vagrant/pro/upload/ + /up.png</span></code></pre><ul><li>/对root指令无太大影响，而alias对斜杠的要求更高</li></ul><h4 id="SpringBoot自带的Async注解"><a href="#SpringBoot自带的Async注解" class="headerlink" title="SpringBoot自带的Async注解"></a>SpringBoot自带的Async注解</h4><ul><li>@Async起作用必须在入口类上配置 @EnableAsync开启异步处理</li><li>必须要新建一个类，类中写入task的方法，并加上注释</li><li>异步处理最好要自己定义线程池，此时@Async注解可以在括号中指定线程池的名称</li></ul><h3 id="下周计划"><a href="#下周计划" class="headerlink" title="下周计划"></a>下周计划</h3><ol><li>开始学习一波SpringCloud，慢慢写个demo</li><li>落下了两周的课 先补回来 T_T</li><li>三道算法题</li></ol>]]></content>
      
      
      <categories>
          
          <category> 周报 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 周报 </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> 踩坑 </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
